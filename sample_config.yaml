# Видео
video_path: "sample1.mp4"
video_sizer: 0.4
video_show: True

# Логирование
log_file: "logs/tracking.log"
log_level: "DEBUG"
log_format: "<green>{time:YYYY-MM-DD HH:mm:ss.SSS UTCZ}</> | \
             <level>{level: <8}</> | \
             <cyan>{name}:{function}:{line}</> - <level>{message}</>"

# Сетевые устройства (неявно используются в некоторых конфигурациях)
devices:
    # бэкенд
    backend:
        # ip или домен бэкенда
        domain: localhost
        # таймаут для всех запросов бэкенду
        timeout_sec: 2

    # шторка для сброса пачек
    shutter:
        # ip или домен заслонки
        domain: 127.0.0.1
        key: .1.2.3.1.2.3.40418.2.6.2.2.1.3.1.1

    # сенсор для определения наличия пачек
    sensor:
        # ip или домен датчика расстояния
        domain: 127.0.0.2
        key: .1.2.3.1.2.3.40418.2.6.2.2.1.3.1.2

access:
    using: Backend

    # стартовый режим работы конвейера
    work_mode: auto
    # стартовое кол-во ожидаемых QR-кодов
    codes_count: 2

    # Не изменяет состояние (режим работы и кол-во кодов остаются изначальными)
    Immutable: {}

    # Регулярно обновляет кол-во кодов и режим работы бэкенда
    Backend: {}

detection:
    using: Background

    # Распознавание наличия пачек нейросетью
    Neuronet:
        # путь к tensorflow.lite-модели, которая будет определять наличие пачки
        model_path: model.tflite
        # пороговое значение для результатов предсказания моделью
        threshold: 0.6
        # как часто запускать модель
        # (если модель уже давала прогноз в течение этого срока, то будет выдано её прошлое предсказание)
        pooling_period_sec: 0.5

    Background:
        # скорость переобучения фона
        learning_rate: 0.0001
        # пороговое значение активации
        threshold_score: 0.40

    # Распознавание наличия пачек датчиком расстояния
    Sensor:
        pooling_period_sec: 0.5

notification:
    using: Backend

    # Оповещение о пачках исключительно бэкенда (его адрес настраивается в devices)
    Backend:
        use_backend_for_bad_packs: True

    # Оповещение о пачках бэкенда с возможностью сбрасывать их шторкой и (не)извещать бэкенд
    BackendWithShutter:
        # время ожидания перед открытием сброса
        shutter_wait_before_sec: 8
        # время пока сброс открыт
        shutter_wait_open_sec: 18
        # отправлять запрос шторке, если пачка оказалась плохой
        use_shutter_for_bad_packs: True
        # отправлять данные бэкенду, если пачка оказалось плохой
        use_backend_for_bad_packs: False

validation:
    using: CodesCount

    # Валидация пачек по кол-ву QR кодов (запрещённые коды отсеиваются)
    CodesCount:
        # считать пачку невалидной, если кодов меньше ожидаемого
        reject_if_less: True
        # считать пачку невалидной, если кодов больше ожидаемого
        reject_if_more: True
        # заменять некорректные пачки шаблонными пачками с пустыми кодами
        # (пустая строка для qr и 13-и нулей для штрих-кодов)
        replace_empty_if_reject: True
